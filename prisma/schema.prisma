generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  membership    Membership[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Organization {
  id   String @id @default(cuid())
  name String
  slug String

  membership Membership[]
  space      Space[]
}

model Membership {
  id   String @id @default(cuid())
  role String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String

  @@index([organizationId])
  @@index([userId])
}

model Space {
  id   String @id @default(cuid())
  name String
  slug String

  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
  pages          Page[]

  @@index([organizationId])
}

model Page {
  id      String @id @default(cuid())
  name    String
  fileUrl String

  space   Space  @relation(fields: [spaceId], references: [id])
  spaceId String

  @@index([spaceId])
}
